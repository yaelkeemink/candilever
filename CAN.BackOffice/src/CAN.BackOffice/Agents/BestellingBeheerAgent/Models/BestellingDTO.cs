// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace CAN.BackOffice.Agents.BestellingsAgent.Agents.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class BestellingDTO
    {
        /// <summary>
        /// Initializes a new instance of the BestellingDTO class.
        /// </summary>
        public BestellingDTO() { }

        /// <summary>
        /// Initializes a new instance of the BestellingDTO class.
        /// </summary>
        public BestellingDTO(long klantnummer, long? bestellingnummer = default(long?), IList<ArtikelDTO> artikelen = default(IList<ArtikelDTO>), DateTime? bestelDatum = default(DateTime?), int? status = default(int?))
        {
            Bestellingnummer = bestellingnummer;
            Klantnummer = klantnummer;
            Artikelen = artikelen;
            BestelDatum = bestelDatum;
            Status = status;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bestellingnummer")]
        public long? Bestellingnummer { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "klantnummer")]
        public long Klantnummer { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "artikelen")]
        public IList<ArtikelDTO> Artikelen { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bestelDatum")]
        public DateTime? BestelDatum { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public int? Status { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (this.Artikelen != null)
            {
                foreach (var element in this.Artikelen)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
