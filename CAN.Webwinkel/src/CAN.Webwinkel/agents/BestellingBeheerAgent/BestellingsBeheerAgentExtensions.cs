// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace CAN.Webwinkel.Agents.BestellingsAgent
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;
    using Models;

    /// <summary>
    /// Extension methods for BestellingsBeheerAgent.
    /// </summary>
    public static partial class BestellingsBeheerAgentExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='bestelling'>
            /// </param>
            public static object BestellingStatusOpgehaald(this IBestellingsBeheerAgent operations, long? bestelling = default(long?))
            {
                return Task.Factory.StartNew(s => ((IBestellingsBeheerAgent)s).BestellingStatusOpgehaaldAsync(bestelling), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='bestelling'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> BestellingStatusOpgehaaldAsync(this IBestellingsBeheerAgent operations, long? bestelling = default(long?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BestellingStatusOpgehaaldWithHttpMessagesAsync(bestelling, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='bestellingDTO'>
            /// </param>
            public static object Post(this IBestellingsBeheerAgent operations, BestellingDTO bestellingDTO = default(BestellingDTO))
            {
                return Task.Factory.StartNew(s => ((IBestellingsBeheerAgent)s).PostAsync(bestellingDTO), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='bestellingDTO'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> PostAsync(this IBestellingsBeheerAgent operations, BestellingDTO bestellingDTO = default(BestellingDTO), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PostWithHttpMessagesAsync(bestellingDTO, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
